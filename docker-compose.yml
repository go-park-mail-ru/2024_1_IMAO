version: "3.8"

services:
  postgres:
    image: postgres:16.0-alpine3.18
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - ${BACKEND_PORT_POSTGRES}:${BACKEND_PORT_POSTGRES} # [порт компьютера]:[порт контейнера] 5432:5432
    command:
      - "postgres"
      - "-c"
      - "port=${BACKEND_PORT_POSTGRES}"
    volumes:
      - postgres:/var/lib/postgresql/data


  pgadmin:
    image: dpage/pgadmin4:7.8
    environment:
      - PGADMIN_DEFAULT_EMAIL=imao@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=password_imao_1337
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT_ENV}
    ports:
      - ${PG_ADMIN_PORT}:${PGADMIN_LISTEN_PORT_ENV} # [порт компьютера]:[порт контейнера]
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres


  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
#      - '--web.external-url=prometheus'


  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"

  main: 
    build:
      context: .
      dockerfile: ./build/main.Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - main:/var/lib/main

  auth: 
    build:
      context: .
      dockerfile: ./build/auth.Dockerfile
    ports:
      - "8081:8081"
      - "7071:7071"
    volumes:
      - auth:/var/lib/auth

  profile: 
    build:
      context: .
      dockerfile: ./build/profile.Dockerfile
    ports:
      - "8082:8082"
      - "7072:7072"
    volumes:
      - profile:/var/lib/profile

  cart: 
    build:
      context: .
      dockerfile: ./build/cart.Dockerfile
    ports:
      - "8083:8083"
      - "7073:7073"
    volumes:
      - cart:/var/lib/cart                  

volumes:
  postgres:
  pgadmin:
  prometheus:
  grafana:
  prometheus_data:
  main:
  auth:
  profile:
  cart:

  
