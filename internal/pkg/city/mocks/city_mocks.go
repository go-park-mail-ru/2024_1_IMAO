// Code generated by MockGen. DO NOT EDIT.
// Source: city.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2024_1_IMAO/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockCityStorageInterface is a mock of CityStorageInterface interface.
type MockCityStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCityStorageInterfaceMockRecorder
}

// MockCityStorageInterfaceMockRecorder is the mock recorder for MockCityStorageInterface.
type MockCityStorageInterfaceMockRecorder struct {
	mock *MockCityStorageInterface
}

// NewMockCityStorageInterface creates a new mock instance.
func NewMockCityStorageInterface(ctrl *gomock.Controller) *MockCityStorageInterface {
	mock := &MockCityStorageInterface{ctrl: ctrl}
	mock.recorder = &MockCityStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCityStorageInterface) EXPECT() *MockCityStorageInterfaceMockRecorder {
	return m.recorder
}

// GetCityList mocks base method.
func (m *MockCityStorageInterface) GetCityList(ctx context.Context) (*models.CityList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCityList", ctx)
	ret0, _ := ret[0].(*models.CityList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCityList indicates an expected call of GetCityList.
func (mr *MockCityStorageInterfaceMockRecorder) GetCityList(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCityList", reflect.TypeOf((*MockCityStorageInterface)(nil).GetCityList), ctx)
}
