basePath: /api/v1
definitions:
  responses.AdvertsErrResponse:
    properties:
      code:
        type: integer
      status:
        type: string
    type: object
  responses.AdvertsOkResponse:
    properties:
      adverts:
        items:
          $ref: '#/definitions/storage.Advert'
        type: array
      code:
        type: integer
    type: object
  responses.AuthErrResponse:
    properties:
      code:
        type: integer
      status:
        type: string
    type: object
  responses.AuthOkResponse:
    properties:
      code:
        type: integer
      isAuth:
        type: boolean
      sessionId:
        type: string
      user:
        $ref: '#/definitions/storage.User'
    type: object
  storage.Advert:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        $ref: '#/definitions/storage.Image'
      location:
        type: string
      price:
        type: integer
      title:
        type: string
      userId:
        type: integer
    type: object
  storage.Image:
    type: object
  storage.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      surname:
        type: string
    type: object
host: 109.120.183.3:8080
info:
  contact: {}
  description: This is a server of YULA server.
  title: YULA project API
  version: "1.0"
paths:
  /adverts:
    get:
      consumes:
      - application/json
      description: Get a paginated list of adverts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AdvertsOkResponse'
        "400":
          description: Too many adverts specified
          schema:
            $ref: '#/definitions/responses.AdvertsErrResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/responses.AdvertsErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.AdvertsErrResponse'
      summary: Retrieve a list of adverts
      tags:
      - adverts
  /check_auth:
    get:
      consumes:
      - application/json
      description: Verify if the user is authenticated by checking the session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AuthOkResponse'
      summary: Check user authentication
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and create a new session
      parameters:
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AuthOkResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
      summary: User login
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Invalidate the user session and log the user out
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
        "401":
          description: User not authorized
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
      summary: User logout
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user and create a new session
      parameters:
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      - description: Password confirmation
        in: formData
        name: passwordRepeat
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.AuthOkResponse'
        "400":
          description: Passwords do not match
          schema:
            $ref: '#/definitions/responses.AuthErrResponse'
      summary: User signup
      tags:
      - auth
schemes:
- http
swagger: "2.0"
