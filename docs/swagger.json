{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a server of YULA server.",
        "title": "YULA project API",
        "contact": {},
        "version": "1.0"
    },
    "host": "109.120.183.3:8008",
    "paths": {
        "/api/adverts": {
            "get": {
                "description": "Get a paginated list of adverts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Retrieve a list of adverts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AdvertsOkResponse"
                        }
                    },
                    "400": {
                        "description": "Too many adverts specified",
                        "schema": {
                            "$ref": "#/definitions/responses.AdvertsErrResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/responses.AdvertsErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.AdvertsErrResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/check_auth": {
            "get": {
                "description": "Verify if the user is authenticated by checking the session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check user authentication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthOkResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Authenticate user and create a new session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User data for login",
                        "name": "UnauthorizedUserTruncated",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.UnauthorizedUserTruncated"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthOkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "Invalidate the user session and log the user out",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    },
                    "401": {
                        "description": "User not authorized",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "description": "Register a new user and create a new session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User signup",
                "parameters": [
                    {
                        "description": "User data for signup",
                        "name": "UnauthorizedUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.UnauthorizedUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthOkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.AuthErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "responses.AdvertsErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "responses.AdvertsOkResponse": {
            "type": "object",
            "properties": {
                "adverts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Advert"
                    }
                },
                "code": {
                    "type": "integer"
                }
            }
        },
        "responses.AuthErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "responses.AuthOkResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "isAuth": {
                    "type": "boolean"
                },
                "sessionId": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/storage.User"
                }
            }
        },
        "storage.Advert": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "$ref": "#/definitions/storage.Image"
                },
                "location": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "storage.Image": {
            "type": "object"
        },
        "storage.UnauthorizedUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordRepeat": {
                    "type": "string"
                }
            }
        },
        "storage.UnauthorizedUserTruncated": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "storage.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}